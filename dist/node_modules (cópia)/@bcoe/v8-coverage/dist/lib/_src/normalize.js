"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.normalizeRangeTree = exports.normalizeFunctionCov = exports.deepNormalizeScriptCov = exports.normalizeScriptCov = exports.deepNormalizeProcessCov = exports.normalizeProcessCov = void 0;
const compare_1 = require("./compare");
const range_tree_1 = require("./range-tree");
function normalizeProcessCov(processCov) {
    processCov.result.sort(compare_1.compareScriptCovs);
    for (const [scriptId, scriptCov] of processCov.result.entries()) {
        scriptCov.scriptId = scriptId.toString(10);
    }
}
exports.normalizeProcessCov = normalizeProcessCov;
function deepNormalizeProcessCov(processCov) {
    for (const scriptCov of processCov.result) {
        deepNormalizeScriptCov(scriptCov);
    }
    normalizeProcessCov(processCov);
}
exports.deepNormalizeProcessCov = deepNormalizeProcessCov;
function normalizeScriptCov(scriptCov) {
    scriptCov.functions.sort(compare_1.compareFunctionCovs);
}
exports.normalizeScriptCov = normalizeScriptCov;
function deepNormalizeScriptCov(scriptCov) {
    for (const funcCov of scriptCov.functions) {
        normalizeFunctionCov(funcCov);
    }
    normalizeScriptCov(scriptCov);
}
exports.deepNormalizeScriptCov = deepNormalizeScriptCov;
function normalizeFunctionCov(funcCov) {
    funcCov.ranges.sort(compare_1.compareRangeCovs);
    const tree = range_tree_1.RangeTree.fromSortedRanges(funcCov.ranges);
    normalizeRangeTree(tree);
    funcCov.ranges = tree.toRanges();
}
exports.normalizeFunctionCov = normalizeFunctionCov;
function normalizeRangeTree(tree) {
    tree.normalize();
}
exports.normalizeRangeTree = normalizeRangeTree;
//# sourceMappingURL=normalize.js.map